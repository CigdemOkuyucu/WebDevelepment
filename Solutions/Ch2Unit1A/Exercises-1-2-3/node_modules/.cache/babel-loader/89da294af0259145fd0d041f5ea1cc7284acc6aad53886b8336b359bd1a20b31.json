{"ast":null,"code":"//import { Map } from \"immutable\"\n\nexport const initRegistrationState = {\n  name: \"\",\n  lastname: \"\",\n  age: 18,\n  //updateName: (e:React.ChangeEvent<HTMLInputElement>) => (state:RegistrationFormState): RegistrationFormState =>({\n  //    ...state,\n  //    name: e.currentTarget.value\n  //})\n  updateName: name => state => ({\n    ...state,\n    name: name\n  }),\n  updateLastName: lastname => state => ({\n    ...state,\n    lastname: lastname\n  }),\n  updateAge: age => state => ({\n    ...state,\n    age: age\n  }),\n  insertPerson: state => ({\n    ...state,\n    currentPersonId: state.currentPersonId + 1,\n    storage: state.storage.set(state.currentPersonId, {\n      id: state.currentPersonId,\n      name: state.name,\n      lastname: state.lastname,\n      age: state.age\n    })\n  })\n};","map":{"version":3,"names":["initRegistrationState","name","lastname","age","updateName","state","updateLastName","updateAge","insertPerson","currentPersonId","storage","set","id"],"sources":["/Users/cigdem/Desktop/Francesco-React/my-app/src/RegistrationForm/registration.state.ts"],"sourcesContent":["//import { Map } from \"immutable\"\nimport { Person } from \"../Home/home.state\"\n\nexport type RegistrationFormState=Person & {\n    updateName: (name:string) => (state:RegistrationFormState) =>  RegistrationFormState\n    updateLastName: (lastname:string) => (state:RegistrationFormState) =>  RegistrationFormState\n    updateAge: (age:number) => (state:RegistrationFormState) =>  RegistrationFormState\n    insertPerson: (state:RegistrationFormState) => RegistrationFormState\n}\n\nexport const initRegistrationState :RegistrationFormState={\n    name: \"\",\n    lastname:\"\",\n    age:18,\n    //updateName: (e:React.ChangeEvent<HTMLInputElement>) => (state:RegistrationFormState): RegistrationFormState =>({\n    //    ...state,\n    //    name: e.currentTarget.value\n    //})\n    updateName: (name:string) => (state:RegistrationFormState): RegistrationFormState =>({\n        ...state,\n        name: name\n    }),\n    updateLastName: (lastname:string) => (state:RegistrationFormState): RegistrationFormState =>({\n        ...state,\n        lastname: lastname\n    }),\n    updateAge: (age:number) => (state:RegistrationFormState): RegistrationFormState =>({\n        ...state,\n        age: age\n    }),\n    insertPerson: (state:RegistrationFormState): RegistrationFormState=>({\n        ...state,\n        currentPersonId : state.currentPersonId +1,\n        storage: state.storage.set(state.currentPersonId,{\n            id:state.currentPersonId,\n            name:state.name,\n            lastname:state.lastname,\n            age : state.age\n        })\n    })\n}"],"mappings":"AAAA;;AAUA,OAAO,MAAMA,qBAA4C,GAAC;EACtDC,IAAI,EAAE,EAAE;EACRC,QAAQ,EAAC,EAAE;EACXC,GAAG,EAAC,EAAE;EACN;EACA;EACA;EACA;EACAC,UAAU,EAAGH,IAAW,IAAMI,KAA2B,KAA4B;IACjF,GAAGA,KAAK;IACRJ,IAAI,EAAEA;EACV,CAAC,CAAC;EACFK,cAAc,EAAGJ,QAAe,IAAMG,KAA2B,KAA4B;IACzF,GAAGA,KAAK;IACRH,QAAQ,EAAEA;EACd,CAAC,CAAC;EACFK,SAAS,EAAGJ,GAAU,IAAME,KAA2B,KAA4B;IAC/E,GAAGA,KAAK;IACRF,GAAG,EAAEA;EACT,CAAC,CAAC;EACFK,YAAY,EAAGH,KAA2B,KAA2B;IACjE,GAAGA,KAAK;IACRI,eAAe,EAAGJ,KAAK,CAACI,eAAe,GAAE,CAAC;IAC1CC,OAAO,EAAEL,KAAK,CAACK,OAAO,CAACC,GAAG,CAACN,KAAK,CAACI,eAAe,EAAC;MAC7CG,EAAE,EAACP,KAAK,CAACI,eAAe;MACxBR,IAAI,EAACI,KAAK,CAACJ,IAAI;MACfC,QAAQ,EAACG,KAAK,CAACH,QAAQ;MACvBC,GAAG,EAAGE,KAAK,CAACF;IAChB,CAAC;EACL,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}