{"ast":null,"code":"var _jsxFileName = \"/Users/cigdem/Desktop/Francesco-React/my-app/src/RegistrationForm/registration.tsx\";\nimport React from \"react\";\nimport { initRegistrationState } from \"./registration.state\";\n\n//Add react component \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props); //base class\n    //initialize the state\n    //this.state = {}\n    this.state = initRegistrationState; //invoke \n  }\n\n  //each react component has a render method\n  //seo each component should implement the render method\n\n  //JSX.Element is an object in react that represent an html node\n  //When ever the render is called namely fomr the index.tsx as root.render\n  //it will go though each component and these are converted to html elements.\n\n  //Hello REact!\n  /*\n  render():JSX.Element{\n      return(\n          <div>\n              Hello Registration!\n          </div>\n      )\n  }\n  */\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.name\n          //onChange={e => this.setState({...this.state, name: e.currentTarget.value})}\n          //onChange={e=> this.setState((state: RegistrationFormState) => ({...this.state, name: e.currentTarget.value}))}\n\n          //onChange={e=> this.setState(this.state.updateName(e))}\n          //This will guarantee that the state will be the latest possible version\n          /*React at some point combine all these callbacks into a single callback and\n          it will update all the states in sequence and it will inject the lastest state\n          into the next call back that react has to run.\n          There is a cascase od callbacka that will be executed in sequence.\n          But the setstate runs immmmidiately*/,\n\n          onChange: e => this.setState(this.state.updateName(e.currentTarget.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.lastname,\n          onChange: e => this.setState(this.state.updateLastName(e.currentTarget.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Age:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.age,\n          onChange: e => this.setState(this.state.updateAge(e.currentTarget.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","initRegistrationState","jsxDEV","_jsxDEV","RegistrationForm","Component","constructor","props","state","render","children","value","name","onChange","e","setState","updateName","currentTarget","fileName","_jsxFileName","lineNumber","columnNumber","lastname","updateLastName","age","updateAge"],"sources":["/Users/cigdem/Desktop/Francesco-React/my-app/src/RegistrationForm/registration.tsx"],"sourcesContent":["import React from \"react\";\nimport { initRegistrationState, RegistrationFormState } from \"./registration.state\";\n\n//Add react component \n\nexport class RegistrationForm extends React.Component<{},RegistrationFormState>{\n    constructor(props: {}){\n        super(props)//base class\n        //initialize the state\n        //this.state = {}\n        this.state = initRegistrationState //invoke \n\n    }\n\n    //each react component has a render method\n    //seo each component should implement the render method\n\n    //JSX.Element is an object in react that represent an html node\n    //When ever the render is called namely fomr the index.tsx as root.render\n    //it will go though each component and these are converted to html elements.\n\n\n    //Hello REact!\n    /*\n    render():JSX.Element{\n        return(\n            <div>\n                Hello Registration!\n            </div>\n        )\n    }\n    */\n\n    render():JSX.Element{\n        return(\n            <div>\n                <div>\n                    Name:\n                    <input\n                        value={this.state.name}\n                        //onChange={e => this.setState({...this.state, name: e.currentTarget.value})}\n                        //onChange={e=> this.setState((state: RegistrationFormState) => ({...this.state, name: e.currentTarget.value}))}\n                        \n                        //onChange={e=> this.setState(this.state.updateName(e))}\n                        //This will guarantee that the state will be the latest possible version\n                        /*React at some point combine all these callbacks into a single callback and\n                        it will update all the states in sequence and it will inject the lastest state\n                        into the next call back that react has to run.\n                        There is a cascase od callbacka that will be executed in sequence.\n                        But the setstate runs immmmidiately*/\n\n                        onChange={e=> this.setState(this.state.updateName(e.currentTarget.value))}\n                    >\n                    </input>\n                </div>\n                <div>\n                    Last Name:\n                    <input\n                        value={this.state.lastname}\n                        onChange={e=> this.setState(this.state.updateLastName(e.currentTarget.value))}\n                    >\n                    </input>\n                </div>\n                <div>\n                    Age:\n                    <input\n                        value={this.state.age}\n                        onChange={e=> this.setState(this.state.updateAge(e.currentTarget.value))}\n                    >\n                    </input>\n                </div>\n            </div>\n        )\n    }\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,qBAAqB,QAA+B,sBAAsB;;AAEnF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,gBAAgB,SAASJ,KAAK,CAACK,SAAS,CAA0B;EAC3EC,WAAWA,CAACC,KAAS,EAAC;IAClB,KAAK,CAACA,KAAK,CAAC;IACZ;IACA;IACA,IAAI,CAACC,KAAK,GAAGP,qBAAqB,EAAC;EAEvC;;EAEA;EACA;;EAEA;EACA;EACA;;EAGA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEIQ,MAAMA,CAAA,EAAc;IAChB,oBACIN,OAAA;MAAAO,QAAA,gBACIP,OAAA;QAAAO,QAAA,GAAK,OAED,eAAAP,OAAA;UACIQ,KAAK,EAAE,IAAI,CAACH,KAAK,CAACI;UAClB;UACA;;UAEA;UACA;UACA;AACxB;AACA;AACA;AACA,+CAJwB;;UAMAC,QAAQ,EAAEC,CAAC,IAAG,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACP,KAAK,CAACQ,UAAU,CAACF,CAAC,CAACG,aAAa,CAACN,KAAK,CAAC;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEvE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACNlB,OAAA;QAAAO,QAAA,GAAK,YAED,eAAAP,OAAA;UACIQ,KAAK,EAAE,IAAI,CAACH,KAAK,CAACc,QAAS;UAC3BT,QAAQ,EAAEC,CAAC,IAAG,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACP,KAAK,CAACe,cAAc,CAACT,CAAC,CAACG,aAAa,CAACN,KAAK,CAAC;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE3E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACNlB,OAAA;QAAAO,QAAA,GAAK,MAED,eAAAP,OAAA;UACIQ,KAAK,EAAE,IAAI,CAACH,KAAK,CAACgB,GAAI;UACtBX,QAAQ,EAAEC,CAAC,IAAG,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACP,KAAK,CAACiB,SAAS,CAACX,CAAC,CAACG,aAAa,CAACN,KAAK,CAAC;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEtE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}