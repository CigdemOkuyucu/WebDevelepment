{"ast":null,"code":"export const initHomeState = {\n  currentPersonId: 0,\n  storage: new Map(),\n  view: \"home\",\n  updateViewState: view => state => ({\n    ...state,\n    //takes the state as it is\n    view: view\n  }),\n  insertPerson: person => state => ({\n    ...state,\n    currentPersonId: state.currentPersonId + 1,\n    storage: state.storage.set(state.currentPersonId, {\n      id: state.currentPersonId,\n      name: person.name,\n      lastname: person.lastname,\n      age: person.age\n    })\n  }),\n  deletePerson: id => state => {\n    state.storage.delete(id);\n    return {\n      ...state\n    };\n  }\n};","map":{"version":3,"names":["initHomeState","currentPersonId","storage","Map","view","updateViewState","state","insertPerson","person","set","id","name","lastname","age","deletePerson","delete"],"sources":["/Users/cigdem/Desktop/Francesco-React/my-app/src/Home/home.state.ts"],"sourcesContent":["export interface Person{\n    name:string\n    lastname:string\n    age:number\n}\n\nexport type ViewState = \n\"home\" | \n\"registration\" |\n\"overview\"\n\nexport type PersonEntry = Person & {id:number}\n\nexport interface HomeState {\n    //move the storage here to share between the overview and registation pages\n    currentPersonId:number\n    storage :Map<number,PersonEntry>\n    view :ViewState\n    updateViewState:(view:ViewState)=>(state: HomeState) => HomeState\n    insertPerson:(person:Person)=> (state:HomeState) => HomeState\n    deletePerson:(id:number)=> (state:HomeState) => HomeState\n}\n\nexport const initHomeState : HomeState = {\n    currentPersonId: 0,\n    storage: new Map(),\n    view:  \"home\",\n    updateViewState:(view:ViewState)=>(state: HomeState): HomeState => ({\n        ...state, //takes the state as it is\n        view:view\n    }),\n    insertPerson:(person:Person)=>(state:HomeState): HomeState=>({\n        ...state,\n        currentPersonId : state.currentPersonId +1,\n        storage: state.storage.set(state.currentPersonId,{\n            id:state.currentPersonId,\n            name:person.name,\n            lastname:person.lastname,\n            age : person.age\n        })\n    }),\n    deletePerson:(id:number)=>(state:HomeState): HomeState=>{\n        state.storage.delete(id)\n        return {...state}\n    }\n}\n"],"mappings":"AAuBA,OAAO,MAAMA,aAAyB,GAAG;EACrCC,eAAe,EAAE,CAAC;EAClBC,OAAO,EAAE,IAAIC,GAAG,CAAC,CAAC;EAClBC,IAAI,EAAG,MAAM;EACbC,eAAe,EAAED,IAAc,IAAIE,KAAgB,KAAiB;IAChE,GAAGA,KAAK;IAAE;IACVF,IAAI,EAACA;EACT,CAAC,CAAC;EACFG,YAAY,EAAEC,MAAa,IAAIF,KAAe,KAAe;IACzD,GAAGA,KAAK;IACRL,eAAe,EAAGK,KAAK,CAACL,eAAe,GAAE,CAAC;IAC1CC,OAAO,EAAEI,KAAK,CAACJ,OAAO,CAACO,GAAG,CAACH,KAAK,CAACL,eAAe,EAAC;MAC7CS,EAAE,EAACJ,KAAK,CAACL,eAAe;MACxBU,IAAI,EAACH,MAAM,CAACG,IAAI;MAChBC,QAAQ,EAACJ,MAAM,CAACI,QAAQ;MACxBC,GAAG,EAAGL,MAAM,CAACK;IACjB,CAAC;EACL,CAAC,CAAC;EACFC,YAAY,EAAEJ,EAAS,IAAIJ,KAAe,IAAc;IACpDA,KAAK,CAACJ,OAAO,CAACa,MAAM,CAACL,EAAE,CAAC;IACxB,OAAO;MAAC,GAAGJ;IAAK,CAAC;EACrB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}